service: videocloud

resources:
  - ${file(resources/db.yml)}
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
  - ${file(resources/s3.yml)}
  - ${file(resources/api-gateway-errors.yml)}

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${self:custom.secrets.NODE_ENV}
  region: eu-central-1
  environment:
    NODE_ENV: ${self:custom.secrets.NODE_ENV}
    DB_HOST: ${self:custom.secrets.DB_HOST}
    DB_NAME: ${self:custom.secrets.DB_NAME}
    DB_USER: ${self:custom.secrets.DB_USER}
    DB_PASS: ${self:custom.secrets.DB_PASS}
  iamManagedPolicies:
    - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole

functions:
  createUser:
    handler: createUser.main
    events:
      - http:
          path: users
          method: post
          cors: true
  listUser:
    handler: listUser.main
    events:
      - http:
          path: users
          method: get
          cors: true
  getUser:
    handler: getUser.main
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
  createVideo:
    handler: createVideo.main
    events:
      - http:
          path: videos
          method: post
          cors: true
  listVideo:
    handler: listVideo.main
    events:
      - http:
          path: videos
          method: get
          cors: true
  getVideo:
    handler: getVideo.main
    events:
      - http:
          path: videos/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
  createComment:
    handler: createComment.main
    events:
      - http:
          path: comments
          method: post
          cors: true
  listComment:
    handler: listComment.main
    events:
      - http:
          path: videos/{id}/comments
          method: get
          cors: true
  getComment:
    handler: getComment.main
    events:
      - http:
          path: comments/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  secrets: ${file(secrets.json)}
  stage: ${opt:stage, self:provider.stage}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceInclude:
        - pg
